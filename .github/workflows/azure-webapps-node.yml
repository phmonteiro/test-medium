name: Build and deploy Vite app to Azure Web App

# Trigger on pushes to main branch or manual workflow dispatch
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Environment variables used across jobs
env:
  VITE_APP_NAME: test-medium
  NODE_VERSION: '22.x'
  APP_NAME: 'test-medium'
  ARTIFACT_NAME: 'vite-app'
  BUILD_OUTPUT_PATH: 'dist'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci  # Using 'npm ci' instead of 'npm install' for more reliable builds

      - name: Build application
        run: npm run build
        env:
          VITE_APP_NAME: ${{ env.VITE_APP_NAME }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT_PATH }}
          retention-days: 5  # Specify how long to keep the artifact

  deploy:
    name: Deploy to Azure
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT_PATH }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: ${{ env.BUILD_OUTPUT_PATH }}

      - name: Post-deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "üöÄ Deployment successful!"
          else
            echo "‚ùå Deployment failed"
          fi
